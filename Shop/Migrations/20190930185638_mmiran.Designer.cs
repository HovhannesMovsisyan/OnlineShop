// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shop.Models;

namespace Shop.Migrations
{
    [DbContext(typeof(ShopContext))]
    [Migration("20190930185638_mmiran")]
    partial class mmiran
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Shop.Models.Cart", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnName("product_id");

                    b.Property<int>("UserId")
                        .HasColumnName("user_id");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<int?>("Quantity")
                        .HasColumnName("quantity");

                    b.HasKey("ProductId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("Shop.Models.List", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnName("name");

                    b.Property<int?>("UserId")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("list");
                });

            modelBuilder.Entity("Shop.Models.ListProducts", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnName("product_id");

                    b.Property<int>("ListId")
                        .HasColumnName("list_id");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.HasKey("ProductId", "ListId");

                    b.HasIndex("ListId");

                    b.ToTable("list_products");
                });

            modelBuilder.Entity("Shop.Models.Products", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Count")
                        .HasColumnName("count");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .HasColumnName("name");

                    b.Property<double?>("Price")
                        .HasColumnName("price");

                    b.Property<int?>("UserId")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Shop.Models.ProductsPhotos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Photo")
                        .HasColumnName("photo");

                    b.Property<int?>("ProductId")
                        .HasColumnName("product_id");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("products_photos");
                });

            modelBuilder.Entity("Shop.Models.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Login")
                        .HasColumnName("login");

                    b.Property<string>("Name")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .HasColumnName("password");

                    b.Property<string>("Photo")
                        .HasColumnName("photo");

                    b.Property<string>("Surname")
                        .HasColumnName("surname");

                    b.HasKey("Id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Shop.Models.Cart", b =>
                {
                    b.HasOne("Shop.Models.Products", "Product")
                        .WithMany("Cart")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_Cart_Products");

                    b.HasOne("Shop.Models.Users", "User")
                        .WithMany("Cart")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Cart_users");
                });

            modelBuilder.Entity("Shop.Models.List", b =>
                {
                    b.HasOne("Shop.Models.Users", "User")
                        .WithMany("List")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_list_users");
                });

            modelBuilder.Entity("Shop.Models.ListProducts", b =>
                {
                    b.HasOne("Shop.Models.List", "List")
                        .WithMany("ListProducts")
                        .HasForeignKey("ListId")
                        .HasConstraintName("FK_list_products_list");

                    b.HasOne("Shop.Models.Products", "Product")
                        .WithMany("ListProducts")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_list_products_Products");
                });

            modelBuilder.Entity("Shop.Models.Products", b =>
                {
                    b.HasOne("Shop.Models.Users", "User")
                        .WithMany("Products")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Products_users");
                });

            modelBuilder.Entity("Shop.Models.ProductsPhotos", b =>
                {
                    b.HasOne("Shop.Models.Products", "Product")
                        .WithMany("ProductsPhotos")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_products_photos_Products");
                });
#pragma warning restore 612, 618
        }
    }
}
